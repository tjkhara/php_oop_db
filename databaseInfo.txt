*----------------------------------------------*
Login credentials
*----------------------------------------------*
// From https://stackoverflow.com/questions/698914/how-can-i-access-the-mysql-command-line-with-xampp-for-windows

****************************************
cd c:\xampp\mysql\bin
mysql.exe -u root -p globe_bank
****************************************

mysql.exe -u root --password
RSbj1409

// Logging in directly into a database
mysql.exe -u root -p globe_bank
RSbj1409

// Log out
control + C
*----------------------------------------------*
Commands
*----------------------------------------------*

// Using a database
USE globe_bank;

SHOW DATABASES;

CREATE DATABASE db_name;

USE db_name;

DROP DATABASE db_name;

*----------------------------------------------*
Granting privileges to a user
*----------------------------------------------*
// To create a new user called web user

GRANT ALL PRIVILEGES ON globe_bank.* TO 'webuser'@'localhost' IDENTIFIED BY 'RSbj1409';

*----------------------------------------------*
Create table
*----------------------------------------------*

CREATE TABLE table_name (
    column_name1 definition,
    column_name2 definition,
    column_name3 definition,
    options
);

*----------------------------------------------*
Creating the subjects table
*----------------------------------------------*

CREATE TABLE subjects(
    id INT(11) NOT NULL AUTO_INCREMENT,
    menu_name VARCHAR(255),
    position INT(3),
    visible TINYINT(1),
    PRIMARY KEY (id)
);

*----------------------------------------------*
Creating the pages table
*----------------------------------------------*

CREATE TABLE pages(
    id INT(11) NOT NULL AUTO_INCREMENT,
    subject_id INT(3),
    menu_name VARCHAR(255),
    position INT(3),
    visible TINYINT(1),
    content TEXT,
    PRIMARY KEY (id)
);

// Add indexes on all foreign keys
*----------------------------------------------*
Foreign Keys
*----------------------------------------------*

// SQL ADD INDEX
// Do this after creating your tables

ALTER TABLE table
ADD INDEX index_name (column);

// Example
ALTER TABLE pages
ADD INDEX index_name (column);

// For the pages table
ALTER TABLE pages
ADD INDEX fk_subject_id (subject_id);
*----------------------------------------------*
View tables
*----------------------------------------------*
// See all tables
SHOW TABLES;

// See the columns in a table
SHOW COLUMNS FROM table_name;
// Example
SHOW COLUMNS FROM subjects;

// Delete table
DROP TABLE table_name;

*----------------------------------------------*
MySQL CRUD Syntax
*----------------------------------------------*

// Read

SELECT * // select everything from the table
FROM table // table is the table name
WHERE column1 = 'some_text' // can also say WHERE id = 7 or last_name = 'skoglund' etc
ORDER BY column1 ASC; // Ordering of records

// Example

// Show all subjects in the subjects table
SELECT * FROM subjects;

// Record where id = 2
SELECT * FROM subjects WHERE id=2;

// Record where position = 3
SELECT * FROM subjects WHERE position=3;

// Record where position = 3 AND visible = 1
SELECT * FROM subjects WHERE position=3 AND visible=1;

// Reading only select columns
SELECT id, subject_id FROM pages WHERE id=3;

*----------------------------------------------*

// Insert

INSERT INTO table(col1, col2, col3)
values(val1, val2, val3);

// Examples

INSERT INTO subjects(id, menu_name, position, visible)
values(1, 'About Globe Bank', 1, 1);

INSERT INTO subjects(id, menu_name, position, visible)
values(2, 'Consumer', 2, 1);

// Can also remove the ID for the second one
// It will auto increment
// This is the better option

INSERT INTO subjects(menu_name, position, visible)
values('Consumer', 2, 1);

INSERT INTO subjects(menu_name, position, visible)
values('Small Business', 3, 1);

// Getting the id of the inserted record from MySQL

mysqli_insert_id($connection)

*----------------------------------------------*

// Update

UPDATE table
SET col1 = 'this', col2 = 'that'
WHERE id = 1;

// Examples

// Add single quotes around numbers when submitting them

UPDATE subjects SET position='4' WHERE id=3;

// OR multiple changes
UPDATE subjects SET position='4', visible='0' WHERE id=3;

*----------------------------------------------*

// Delete

DELETE FROM table
WHERE id = 1;

// Example
DELETE FROM subjects WHERE id=4 LIMIT 1;



*----------------------------------------------*
Log out of MySQL
*----------------------------------------------*
control + C

*----------------------------------------------*
Adding data to the pages table
*----------------------------------------------*
// Table structure subjects
 id | menu_name        | position | visible |
+----+------------------+----------+---------+
|  1 | About Globe Bank |        1 |       1 |
|  2 | Consumer         |        2 |       1 |
|  3 | Small Business   |        4 |       0 |
+----+------------------+----------+---------


// Table structure pages
CREATE TABLE pages(
    id INT(11) NOT NULL AUTO_INCREMENT,
    subject_id INT(11),
    menu_name VARCHAR(255),
    position INT(3),
    visible TINYINT(1),
    content TEXT,
    PRIMARY KEY (id)
);

// Adding foreign key
// For the pages table
ALTER TABLE pages
ADD INDEX fk_subject_id (subject_id);

// Adding data
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (1, 'Globe Bank', 1, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (1, 'History', 2, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (1, 'Leadership', 3, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (1, 'Contact Us', 4, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (2, 'Banking', 1, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (2, 'Credit Cards', 2, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (2, 'Mortgages', 3, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (3, 'Checking', 1, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (3, 'Loans', 2, 1);
INSERT INTO pages (subject_id, menu_name, position, visible) VALUES (3, 'Merchant Services', 3, 1);

// Trying out CRUD commands for the pages table

UPDATE pages SET position='4' WHERE id=3;

DELETE FROM pages
WHERE id = 10;

*----------------------------------------------*
Connecting to MySQL Using PHP
*----------------------------------------------*

1. Create a database connection
2. Perform query
3. Use returned data
4. Release returned data
5. Close database connection

1. Create a database connection

mysqli_connect($host, $user, $password, $database)

$host -> location server -> localhost in development
MySQL username and password
database name

Returns a connection handle as a result.

5. Close database connection

mysqli_close($connection)

$connection is the connection handle.

<?php

// This guide demonstrates the five fundamental steps
// of database interaction using PHP.

// Credentials
$dbhost = 'localhost';
$dbuser = 'webuser';
$dbpass = 'RSbj1409';
$dbname = 'globe_bank';

// 1. Create a database connection
$connection = mysqli_connect($dbhost, $dbuser, $dbpass, $dbname);

// 2. Perform database query
$query = "SELECT * FROM subjects";
$result_set = mysqli_query($connection, $query);

// 3. Use returned data (if any)

// 4. Release returned data
mysqli_free_result($result_set);

// 5. Close database connection
mysqli_close($connection);

?>

*----------------------------------------------------------------------------------*
Connecting to MySQL Using PHP
Steps 2, 3, and 4.
Performing query, doing something with the results, releasing returned data.
*----------------------------------------------------------------------------------*

// Query:
// Using SELECT we get back a result set

mysqli_query($connection, $query);

// Free results:
// This frees the result set

mysqli_free_result($result_set);

*----------------------------------------------*
// Working with retrieved data
*----------------------------------------------*

// Returns results as standard array
// Like this ['1', 'About Globe Bank', '1', '1']
// Keys are integers
// echo $subject[1];
mysqli_fetch_row

*----------------------------------------------*
******This is the preferred method******
// Returns as an associative array
// ['id' => '1', 'menu_name' => 'About Globe Bank', 'position' => '1', 'visible' => '1']
// Keys are column names
// echo $subject['menu_name'];
mysqli_fetch_assoc

*----------------------------------------------*

// Not really beneficial
// Returns both types of arrays or either one
// You can configure it
// MYSQL_NUM, MYSQL_ASSOC, MYSQL_BOTH

mysqli_fetch_array

*----------------------------------------------*
// Working with the records

// Find all the subjects
$result = find_all_subjects();

while($subject = mysqli_fetch_assoc($result))
{
    echo $subject['menu_name'];
}

*----------------------------------------------------------------------------------*
Error Handling
*----------------------------------------------------------------------------------*

// Error number - returns error number from the last call to the database
// This is faster
mysqli_connect_errno()

// MySQLi error - returns a string description of the last connect error
mysqli_connect_error()

*----------------------------------------------------------------------------------*
Finding a Single Record
*----------------------------------------------------------------------------------*


*----------------------------------------------------------------------------------*
Copy data into a database / import data to database
*----------------------------------------------------------------------------------*

mysql -u user_name -p database_name < path_to_file

Examples:

mysql -u webuser -p globe_bank < C:\xampp\htdocs\sandbox\globe_bank.sql

mysql -u webuser -p globe_bank < C:\xampp\htdocs\sandbox\globe_bank\globe_bank.sql

*----------------------------------------------------------------------------------*

// Database OOP

$db = new mysqli($server, $user, $pwd, $db_name);

#1
// Procedural version
mysqli_query($db, $sql);
// OOP version
$db->query($sql);

#2
// Procedural version
mysqli_real_escape_string($db, $string);
// OOP version
$db->escape_string($string);

#3
// mysqli affected rows - how many rows were affected by the last query
// This is a property

// Procedural version
mysqli_affected_rows($db)
// OOP version
$db->affected_rows;

#4
// When we create a new record in the database we can find out what id was assigned to it

// Procedural version
mysqli_insert_id($db)

// OOP version
// We have a property in the OOP version
$db->insert_id;

-----------------------------------------------------------------------------------------------
// When we do mysqli_query we get back a result

$db = new mysqli($server, $user, $pwd, $db_name);
$result = $db->query($sql);

// The result is also an object
// 3 are most frequently used

#1
// mysqli_fetch_assoc
// This will return the first row of data from the result set as an associative array
// Procedural
mysqli_fetch_assoc($result)
// OOP
$result->fetch_assoc();

#2
// Free up the result

// Procedural
mysqli_free_result($result);

// OOP
$result->free();

#3
// Know the number of rows in the result
// mysqli_num_rows

// Procedural
mysqli_num_rows($result);

// OOP
$result->num_rows;

-----------------------------------------------------------------------------------------------

// Fetching data from a result set

#1 $result->fetch_assoc(); // associative array

#2 $result->fetch_row(); // basic array

#3 $result->fetch_array(); // assoc, row, or both (both is default)

#4 $result->fetch_object(); // crude object
// Don't use the 4th option as this gives a crube object
// Better to get an array of values and then build your own object


-----------------------------------------------------------------------------------------------

// Disconnecting from the database

// Create the object
$db = new mysqli($server, $user, $pwd, $db_name);
// Run a query and get a result set
$result = $db->query($sql);

// Procedural version
mysqli_close($db);
// OOP version
$db->close();